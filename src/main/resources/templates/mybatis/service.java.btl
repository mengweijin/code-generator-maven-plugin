package ${parameters.outputPackage}.service;

<% if(entityLombokModel){ %>
import lombok.extern.slf4j.Slf4j;
<% } %>
import ${parameters.outputPackage}.entity.${entity};
import ${parameters.outputPackage}.mapper.${entity}Mapper;
<% if(isNotEmpty(superServiceClassPackage)){ %>
import ${superServiceClassPackage};
<% } %>
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.util.List;
import java.io.Serializable;

/**
 * <p>
 * ${entity} Service implement
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
<% if(entityLombokModel){ %>
@Slf4j
<% } %>
@Service
@Transactional(rollbackFor = Exception.class)
public class ${entity}Service <% if(isNotEmpty(superServiceClass)){ %>implements ${superServiceClass}<% } %> {

    /**
     * <p>
     * ${entity}Mapper
     * </p>
     */
    @Autowired
    private ${entity}Mapper ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}Mapper;

    /**
     * <p>
     * Select ${entity} by id
     * </p>
     * @param id id
     */
    <% if(isNotEmpty(superServiceClass)){ %>
    @Override
    <% } %>
    public ${entity} getById(Serializable id) {
        return ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}Mapper.getById(id);
    }

    /**
     * <p>
     * Select List<${entity}>
     * </p>
     * @param ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)} ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}
     */
    <% if(isNotEmpty(superServiceClass)){ %>
    @Override
    <% } %>
    public List<${entity}> list(${entity} ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}) {
        return ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}Mapper.selectList(${@cn.hutool.core.util.StrUtil.lowerFirst(entity)});
    }

    /**
     * <p>
     * Add ${entity}
     * </p>
     * @param ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)} ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}
     */
    <% if(isNotEmpty(superServiceClass)){ %>
    @Override
    <% } %>
    public void save(${entity} ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}) {
        ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}Mapper.save(${@cn.hutool.core.util.StrUtil.lowerFirst(entity)});
    }

    /**
     * <p>
     * Update ${entity}
     * </p>
     * @param ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)} ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}
     */
    <% if(isNotEmpty(superServiceClass)){ %>
    @Override
    <% } %>
    public void updateById(${entity} ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}) {
        ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}Mapper.updateById(${@cn.hutool.core.util.StrUtil.lowerFirst(entity)});
    }

    /**
     * <p>
     * Delete ${entity} by id
     * </p>
     * @param id id
     */
    <% if(isNotEmpty(superServiceClass)){ %>
    @Override
    <% } %>
    public void removeById(Serializable id) {
        ${@cn.hutool.core.util.StrUtil.lowerFirst(entity)}Mapper.removeById(id);
    }
}
